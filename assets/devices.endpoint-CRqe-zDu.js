import{xt as e}from"./index-DmwTqtwr.js";var t=`/devices`.replace(/\/+$/,``),n=`/zones`.replace(/\/+$/,``),r=new Set;function i(e){return r.add(e),()=>r.delete(e)}function a(){r.forEach(e=>{try{e()}catch(e){console.error(`Error en listener de dispositivo:`,e)}})}const o={async getByUserId(n){return await e.get(`${t}?userId=${n}`)},async create(n,r){let i=new Date().toISOString(),o=await e.post(t,{userId:n,linkedAt:i,status:`off`,online:!1,zoneId:null,...r});return a(),o},async update(n,r){let i=await e.patch(`${t}/${n}`,r);return a(),i},async remove(n){let r=await e.delete(`${t}/${n}`);return a(),r},async getZones(t){return await e.get(`${n}?userId=${t}`)},async createZone(t,r){let i=await e.post(n,{userId:t,name:r});return a(),i},async renameZone(t,r){let i=await e.patch(`${n}/${t}`,{name:r});return a(),i},async deleteZone(t){let r=await e.delete(`${n}/${t}`);return a(),r},async setDeviceZone(n,r){let i=await e.patch(`${t}/${n}`,{zoneId:r});return a(),i}};export{i as n,o as t};